@page "/buildlog/create"
@using Microsoft.EntityFrameworkCore
@using MiataProjectTracker.Models
@inject IDbContextFactory<MiataProjectTracker.Data.MiataProjectTrackerContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create Build Log Entry</PageTitle>

<div class="page-header">
    <h1>Create Build Log Entry</h1>
</div>

<div class="create-container">
    <div class="create-form-container">
        <EditForm method="post" Model="BuildLog" OnValidSubmit="AddBuildLog" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="alert alert-danger" role="alert"/>

            <div class="form-group mb-3">
                <label for="tag" class="form-label">Tag</label>
                <InputSelect id="tag" @bind-Value="BuildLog.Tag" class="form-select">
                    <option value="">Select a Tag</option>
                    <option value="exhaust">Exhaust</option>
                    <option value="turbo">Turbo</option>
                    <option value="engine">Engine</option>
                    <option value="body">Body</option>
                    <option value="fuel">Fuel</option>
                    <option value="suspension">Suspension</option>
                    <option value="brakes">Brakes</option>
                    <option value="interior">Interior</option>
                    <option value="exterior">Exterior</option>
                    <option value="wheels">Wheels</option>
                    <option value="intake">Intake</option>
                    <option value="cooling">Cooling</option>
                    <option value="tuning">Tuning</option>
                </InputSelect>
                <ValidationMessage For="() => BuildLog.Tag" class="text-danger" />
            </div>

            <div class="form-group mb-3">
                <label for="title" class="form-label">Title</label>
                <InputText id="title" @bind-Value="BuildLog.Title" class="form-control" aria-required="true"/>
                <ValidationMessage For="() => BuildLog.Title" class="text-danger" />
            </div>

            <div class="form-group mb-3">
                <label for="summary" class="form-label">Summary</label>
                <InputTextArea id="summary" @bind-Value="BuildLog.Summary" class="form-control" rows="4" aria-required="true"/>
                <ValidationMessage For="() => BuildLog.Summary" class="text-danger" />
            </div>

            <div class="form-group mb-3">
                <label for="date" class="form-label">Date</label>
                <InputDate id="date" @bind-Value="BuildLog.Date" class="form-control" />
                <ValidationMessage For="() => BuildLog.Date" class="text-danger" />
            </div>

            <div class="button-group">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create Entry
                </button>
                <a href="/buildlog" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to List
                </a>
            </div>
        </EditForm>
    </div>
</div>

<style>
    .page-header {
        text-align: center;
        margin-bottom: 2rem;
        padding: 1rem;
        background: linear-gradient(to right, #f8f9fa, #e9ecef);
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .page-header h1 {
        margin: 0;
        color: #2d3748;
    }

    .create-container {
        display: flex;
        justify-content: center;
        padding: 1rem;
    }

    .create-form-container {
        background: white;
        padding: 2rem;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        width: 100%;
        max-width: 600px;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        font-weight: 500;
        color: #4a5568;
        margin-bottom: 0.5rem;
    }

    .form-control, .form-select {
        border: 1px solid #e2e8f0;
        border-radius: 6px;
        padding: 0.5rem;
        transition: border-color 0.2s;
    }

    .form-control:focus, .form-select:focus {
        border-color: #3182ce;
        box-shadow: 0 0 0 3px rgba(49, 130, 206, 0.1);
    }

    textarea.form-control {
        min-height: 100px;
        resize: vertical;
    }

    .button-group {
        display: flex;
        gap: 1rem;
        margin-top: 2rem;
        padding-top: 1rem;
        border-top: 1px solid #e2e8f0;
    }

    .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        font-weight: 500;
        transition: all 0.2s;
    }

    .btn i {
        font-size: 0.875rem;
    }

    .validation-message {
        font-size: 0.875rem;
        color: #e53e3e;
        margin-top: 0.25rem;
    }
</style>

@code {
    [SupplyParameterFromForm]
    private BuildLog BuildLog { get; set; } = new();

    private async Task AddBuildLog()
    {
        using var context = DbFactory.CreateDbContext();
        context.BuildLog.Add(BuildLog);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/buildlog");
    }
}