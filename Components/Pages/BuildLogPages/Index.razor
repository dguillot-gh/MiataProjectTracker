@page "/buildlog"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using MiataProjectTracker.Models
@using MiataProjectTracker.Data
@implements IAsyncDisposable
@inject IDbContextFactory<MiataProjectTracker.Data.MiataProjectTrackerContext> DbFactory

<PageTitle>Build Log</PageTitle>

<div class="p-4 bg-gray-100 min-h-screen">
    <h1 class="text-3xl font-bold mb-4">Build Log</h1>

    <p class="mb-6">
        <a href="buildlog/create" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
            Create New
        </a>
    </p>

    <QuickGrid Class="table-auto border-collapse border border-gray-300 w-full text-left bg-white rounded-md shadow-md"
               Items="context.BuildLog">
        <PropertyColumn Property="buildlog => buildlog.Tag" Title="Tag" />
        <PropertyColumn Property="buildlog => buildlog.Title" Title="Title" />
        <TemplateColumn Context="buildlog" Title="Summary">
            <span>@TruncateSummary(buildlog.Summary, 50)</span>
        </TemplateColumn>
        <PropertyColumn Property="buildlog => buildlog.Date" Title="Date" />

        <TemplateColumn Context="buildlog">
            <a href="@($"buildlog/edit?id={buildlog.Id}")" class="text-blue-500 hover:text-blue-700">Edit</a> |
            <a href="@($"buildlog/details?id={buildlog.Id}")" class="text-green-500 hover:text-green-700">Details</a> |
            <a href="@($"buildlog/delete?id={buildlog.Id}")" class="text-red-500 hover:text-red-700">Delete</a>
        </TemplateColumn>
    </QuickGrid>
</div>

@code {
    private MiataProjectTrackerContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    private string TruncateSummary(string? summary, int maxLength)
    {
        if (string.IsNullOrEmpty(summary) || summary.Length <= maxLength)
            return summary;

        return summary.Substring(0, maxLength) + "...";
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
