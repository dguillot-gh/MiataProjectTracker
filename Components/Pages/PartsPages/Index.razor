@page "/parts"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using MiataProjectTracker.Models
@using MiataProjectTracker.Data
@implements IAsyncDisposable
@inject IDbContextFactory<MiataProjectTracker.Data.MiataProjectTrackerContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Parts Finder</h1>
<div>
    <input type="search" @bind="partFilter" @bind:event="oninput" />
</div>
<p>
    <a href="parts/create">Create New</a>
</p>

<div>
    <QuickGrid Class="table" Items="filteredParts" Pagination="pagination">
        <PropertyColumn Property="parts => parts.PartName" Sortable="true" />
        <PropertyColumn Property="parts => parts.PartNumber" Sortable="true" />
        <PropertyColumn Property="parts => parts.PartStatus" Sortable="true" />
        <PropertyColumn Property="parts => parts.PartCost" />
        <TemplateColumn Context="parts">
            <a href="@($"parts/edit?id={parts.Id}")">Edit</a> |
            <a href="@($"parts/details?id={parts.Id}")">Details</a> |
            <a href="@($"parts/delete?id={parts.Id}")">Delete</a>
        </TemplateColumn>
    </QuickGrid>
</div>

<Paginator State="pagination" />

@code {
    private string partFilter = string.Empty;

    private IQueryable<Parts> filteredParts =>
        context.Parts.Where(m => m.PartName.Contains(partFilter));

    private MiataProjectTrackerContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    private PaginationState pagination = new PaginationState { ItemsPerPage = 5 };

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
