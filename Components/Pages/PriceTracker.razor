@page "/pricetracker"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using MiataProjectTracker.Models
@using MiataProjectTracker.Data
@implements IAsyncDisposable
@inject IDbContextFactory<MiataProjectTracker.Data.MiataProjectTrackerContext> DbFactory

<div class="p-8 bg-gray-100 min-h-screen">
    <div class="max-w-6xl mx-auto">
        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div class="bg-white p-6 rounded-xl shadow-sm">
                <h3 class="text-sm font-medium text-gray-500 mb-1">Total New Value</h3>
                <p class="text-2xl font-bold text-gray-900">$@totalNewPrice.ToString("N2")</p>
            </div>
            <div class="bg-white p-6 rounded-xl shadow-sm">
                <h3 class="text-sm font-medium text-gray-500 mb-1">Total Paid</h3>
                <p class="text-2xl font-bold text-gray-900">$@totalPaidPrice.ToString("N2")</p>
            </div>
            <div class="bg-white p-6 rounded-xl shadow-sm border-green-100">
                <h3 class="text-sm font-medium text-gray-500 mb-1">Total Savings</h3>
                <p class="text-2xl font-bold text-green-600">$@totalSavings.ToString("N2")</p>
                <span class="text-sm text-green-600">@averageSavingsPercentage.ToString("N0")% Average Savings</span>
            </div>
        </div>

        <!-- Header Section -->
        <div class="bg-white rounded-xl shadow-sm p-6 mb-6">
            <div class="flex justify-between items-center">
                <div>
                    <h1 class="text-2xl font-bold text-gray-900">Parts List</h1>
                    <p class="text-sm text-gray-500 mt-1">Track your parts and savings</p>
                </div>
                <button @onclick="AddNewEntry"
                        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg transition-all duration-200 flex items-center gap-2 shadow-sm hover:shadow">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                    </svg>
                    Add Part
                </button>
            </div>
        </div>

        <!-- Table Section -->
        <div class="bg-white rounded-xl shadow-sm overflow-hidden">
            <table class="min-w-full divide-y divide-gray-200">
                <thead>
                    <tr class="bg-gray-50">
                        <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Part Name</th>
                        <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">New Price</th>
                        <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Paid Price</th>
                        <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Savings</th>
                        <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Source</th>
                        <th class="px-6 py-4 text-left text-xs font-semibold text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200">
                    @foreach (var item in comparisons)
                    {
                        <tr class="hover:bg-gray-50 transition-colors duration-150">
                            <td class="px-6 py-4 whitespace-nowrap font-medium text-gray-900">@item.PartName</td>
                            <td class="px-6 py-4 whitespace-nowrap text-gray-500">$@item.NewPrice.ToString("N2")</td>
                            <td class="px-6 py-4 whitespace-nowrap text-gray-500">$@item.ActualPaidPrice.ToString("N2")</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="text-green-600 font-medium">$@item.Savings.ToString("N2")</span>
                                <span class="text-green-500 text-sm ml-1">(@item.SavingsPercentage.ToString("N0")%)</span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-gray-500">@item.Source</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <button @onclick="() => DeleteEntry(item)"
                                        class="text-red-600 hover:text-red-800 font-medium transition-colors duration-150">
                                    Delete
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    @if (showDialog)
    {
        <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center backdrop-blur-sm">
            <div class="bg-white rounded-xl shadow-lg p-6 w-96 max-w-[90vw]">
                <h2 class="text-xl font-bold text-gray-900 mb-4">Add New Part</h2>
                <div class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Part Name</label>
                        <input @bind="newItem.PartName"
                               class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">New Price ($)</label>
                        <input type="number" step="0.01" @bind="newItem.NewPrice"
                               class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Actual Paid Price ($)</label>
                        <input type="number" step="0.01" @bind="newItem.ActualPaidPrice"
                               class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Source</label>
                        <input @bind="newItem.Source"
                               class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1">Notes</label>
                        <textarea @bind="newItem.Notes" rows="3"
                                  class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200"></textarea>
                    </div>
                </div>
                <div class="mt-6 flex justify-end gap-3">
                    <button @onclick="CloseDialog"
                            class="px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-lg transition-all duration-200">
                        Cancel
                    </button>
                    <button @onclick="SaveEntry"
                            class="px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded-lg transition-all duration-200 shadow-sm hover:shadow">
                        Save
                    </button>
                </div>
            </div>
        </div>
    }
</div>

@code {
    // ... existing code remains the same ...
}

@code {
    // ... existing code remains the same ...
}

@code {
    private MiataProjectTrackerContext context = default!;
    private List<PriceComparison> comparisons = new();
    private bool showDialog = false;
    private PriceComparison newItem = new();

    private decimal totalNewPrice => comparisons.Sum(x => x.NewPrice);
    private decimal totalPaidPrice => comparisons.Sum(x => x.ActualPaidPrice);
    private decimal totalSavings => totalNewPrice - totalPaidPrice;
    private decimal averageSavingsPercentage => comparisons.Any()
        ? comparisons.Average(x => x.SavingsPercentage)
        : 0;

    protected override async Task OnInitializedAsync()
    {
        context = await DbFactory.CreateDbContextAsync();
        await LoadComparisons();
    }

    private async Task LoadComparisons()
    {
        comparisons = await context.PriceComparison.ToListAsync();
    }

    private void AddNewEntry()
    {
        newItem = new PriceComparison();
        showDialog = true;
    }

    private void CloseDialog()
    {
        showDialog = false;
    }

    private async Task SaveEntry()
    {
        if (string.IsNullOrWhiteSpace(newItem.PartName))
            return;

        context.PriceComparison.Add(newItem);
        await context.SaveChangesAsync();
        await LoadComparisons();
        showDialog = false;
        newItem = new();
    }

    private async Task DeleteEntry(PriceComparison item)
    {
        context.PriceComparison.Remove(item);
        await context.SaveChangesAsync();
        await LoadComparisons();
    }

    public async ValueTask DisposeAsync()
    {
        if (context != null)
        {
            await context.DisposeAsync();
        }
    }
}